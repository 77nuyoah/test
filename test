#include<bits/stdc++.h>
#include"random.h"
using namespace std;
string s;
double calculate(string s){
    double res = 0, cur_res = 0;
    int cnt0=0,flag=0;
	double num = 0;
    char op = '+';
    s += '+';
    for (int i = 0; i < s.size(); ++i) {
    	
        char c = s[i];
        if (isdigit(c))
            {if(flag==0)
            num = num * 10 + c - '0';
            if(flag==1)
            {
			cnt0++;
            num = num + (c - '0')*1.0/(cnt0*10);}
			}
        else if(c=='.'){
        	flag=1;continue;
		}
        else if (c == '(') {
        	flag=0;
        	cnt0=0;
            // 将括号中的子字符串作为一个表达式
            int left = i;
            int cnt = 0;  // 保证括号能够匹对的上
            for (; i < s.size(); ++i) {
                if (s[i] == '(') ++cnt;
                if (s[i] == ')') --cnt;
                if (cnt == 0) break;
            }
            num = calculate(s.substr(left + 1, i - left + 1 - 2));
        }
        else if (c == '+' || c == '-' || c == '*' || c == '/') {
        	flag=0;
        	cnt0=0;
            switch (op)  // 使用的是op，不是c
            {
            case '+': cur_res += num; break;
            case '-': cur_res -= num; break;
            case '*': cur_res *= num; break;
            case '/': cur_res =cur_res*1.0/ num; break;
            }

            if (c == '+' || c == '-') {
                res += cur_res;
                cur_res = 0;
            }
            op = c;
            num = 0;
        }
    }
    return res;
}


string create56(){
	string s;
	char sym;
	int len0=Equation_Number();
			for(int i=0;i<len0;i++) 
			{
				if(i==0)
				s=Transform_Double_String(Double_Rand10000());
				
				else
				{
				sym=Get_Sign_high(Add_Sub_Multi_Divid_Choose());
				s=s+sym;
				string num1=Transform_Double_String(Double_Rand10000());
				s=s.append(num1);}
				
								
			}
	return s;
}


int main()
{
	//judge();
    string s = "3+(2+3)/3";
    printf("%0.2f\n",calculate(s)) ;
    double xx=90.1 - 30 + ((220 * (12 + (333 - 19)*1.0 / 3)) + 498) * 31 + 108 / 3;
    printf("%0.2f\n",xx) ;
    return 0;
}
